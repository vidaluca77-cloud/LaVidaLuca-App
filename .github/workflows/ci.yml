name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test du frontend Next.js
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint frontend
      run: npm run lint
    
    - name: Build frontend
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: .next/

  # Test du backend FastAPI
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('apps/ia/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install backend dependencies
      run: |
        cd apps/ia
        pip install -r requirements.txt
    
    - name: Run backend tests
      run: |
        cd apps/ia
        python -m pytest test_api.py -v
    
    - name: Test backend startup
      run: |
        cd apps/ia
        timeout 10s python main.py || [ $? -eq 124 ]

  # Vérification de sécurité
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        npm ci
        cd apps/ia && pip install -r requirements.txt
    
    - name: Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Run Python security check
      run: |
        pip install safety
        cd apps/ia && safety check
      continue-on-error: true

  # Déploiement automatique (seulement sur main)
  deploy:
    needs: [frontend-test, backend-test, security-check]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Vercel (Frontend)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
    
    - name: Deploy to Render (Backend)
      run: |
        echo "Backend deployed automatically via Render GitHub integration"
        # Render se déploie automatiquement sur push vers main
    
    - name: Slack notification
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: 'Déploiement La Vida Luca terminé'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      continue-on-error: true