name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run type-check

    - name: Run tests
      run: npm test -- --coverage --watchAll=false

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

    - name: Build application
      run: npm run build

  test-component:
    runs-on: ubuntu-latest
    name: Component Tests

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run component tests
      run: npm test -- --testPathPatterns="src/app/__tests__" --coverage --watchAll=false

    - name: Upload component test coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: components
        name: component-tests-coverage
        fail_ci_if_error: false

  test-integration:
    runs-on: ubuntu-latest
    name: Integration Tests

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run integration tests
      run: npm test -- --testPathPatterns="tests/integration" --watchAll=false

    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: integration-test-results
        path: |
          jest-results.xml
          coverage/

  accessibility-tests:
    runs-on: ubuntu-latest
    name: Accessibility Tests
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application
      run: npm start &
      env:
        NODE_ENV: production

    - name: Wait for app to be ready
      run: |
        timeout 60s bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  security-tests:
    runs-on: ubuntu-latest
    name: Security Tests

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run npm audit
      run: npm audit --audit-level high

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  performance-tests:
    runs-on: ubuntu-latest
    name: Performance Tests
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Analyze bundle size
      run: |
        npm run build
        npx bundlesize

    - name: Comment bundle size
      uses: github/super-linter@v4
      if: github.event_name == 'pull_request'
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}