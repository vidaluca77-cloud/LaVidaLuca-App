{
  "name": "la-vida-luca-monorepo",
  "version": "1.0.0",
  "private": true,
  "description": "LaVidaLuca collaborative learning platform - monorepo",
  "keywords": ["education", "agriculture", "mfr", "collaboration", "fastapi", "nextjs"],
  "scripts": {
    "dev": "npm run dev:web",
    "dev:web": "cd apps/web && npm run dev",
    "dev:backend": "cd apps/backend && python -m uvicorn app_simple:app --reload --port 8000",
    "dev:full": "concurrently --names \"WEB,API,TEST\" --prefix-colors \"cyan,green,yellow\" \"npm run dev:web\" \"npm run dev:backend\" \"npm run test:watch\"",
    "dev:turbo": "concurrently --names \"WEB,API,TEST,LINT\" --prefix-colors \"cyan,green,yellow,magenta\" \"npm run dev:web\" \"npm run dev:backend\" \"npm run test:watch\" \"npm run lint:watch\"",
    "build": "npm run build:web",
    "build:web": "cd apps/web && npm run build",
    "build:full": "concurrently \"npm run build:web\" \"npm run backend:check\"",
    "start": "npm run start:web",
    "start:web": "cd apps/web && npm run start",
    "lint": "npm run lint:web:safe && npm run lint:backend",
    "lint:web": "cd apps/web && npm run lint",
    "lint:web:safe": "cd apps/web && npx eslint . --ext .js,.jsx,.ts,.tsx --fix || true",
    "lint:backend": "cd apps/backend && python -m flake8 . --exclude=alembic,migrations --max-line-length=88 || true",
    "format": "npm run format:backend",
    "format:backend": "cd apps/backend && python -m black . --line-length=88",
    "lint:watch": "npm run lint:web:safe",
    "lint:web:watch": "cd apps/web && npx eslint . --ext .js,.jsx,.ts,.tsx --fix --watch || true",
    "type-check": "npm run type-check:web",
    "type-check:web": "cd apps/web && npx tsc --noEmit",
    "test": "npm run test:backend",
    "test:web": "cd apps/web && npm test",
    "test:backend": "cd apps/backend && python -m pytest",
    "test:watch": "cd apps/backend && python -m pytest --looponfail -x",
    "test:watch:verbose": "cd apps/backend && python -m pytest --looponfail -x -v",
    "test:coverage": "cd apps/backend && python -m pytest --cov=. --cov-report=html",
    "test:coverage:watch": "cd apps/backend && python -m pytest --cov=. --cov-report=html --looponfail",
    "test:all": "concurrently \"npm run test:backend\" \"npm run type-check:web\"",
    "backend:install": "cd apps/backend && pip install -r requirements.txt",
    "backend:dev": "cd apps/backend && python -m uvicorn app_simple:app --reload --port 8000",
    "backend:test": "cd apps/backend && python -m pytest",
    "backend:test:coverage": "cd apps/backend && python -m pytest --cov=. --cov-report=html",
    "backend:check": "cd apps/backend && python -m pytest --collect-only && echo 'Backend syntax check passed'",
    "backend:migrate": "cd apps/backend && alembic upgrade head",
    "backend:migration": "cd apps/backend && alembic revision --autogenerate",
    "backend:docs": "cd apps/backend && echo 'API docs available at http://localhost:8000/docs'",
    "setup": "npm install && cd apps/web && npm install && cd ../.. && npm run backend:install",
    "setup:fast": "npm ci && cd apps/web && npm ci && cd ../.. && npm run backend:install",
    "clean": "rm -rf apps/web/.next apps/web/node_modules node_modules apps/backend/__pycache__ apps/backend/.pytest_cache",
    "reset": "npm run clean && npm run setup",
    "status": "concurrently --names \"WEB-BUILD,API-TEST,TYPE-CHECK\" \"npm run build:web\" \"npm run test:backend\" \"npm run type-check:web\"",
    "validate": "npm run lint && npm run type-check && npm run test:all && npm run build",
    "precommit": "npm run validate",
    "accelerator": "./scripts/dev-accelerator.sh",
    "dashboard": "./scripts/dev-dashboard.sh",
    "ai:diagnose": "python3 ./scripts/dev-ai-assistant.py diagnose",
    "ai:fix": "python3 ./scripts/dev-ai-assistant.py fix",
    "ai:health": "python3 ./scripts/dev-ai-assistant.py health",
    "ai:optimize": "python3 ./scripts/dev-ai-assistant.py optimize",
    "ai:auto": "python3 ./scripts/dev-ai-assistant.py diagnose --auto",
    "super-dev": "./scripts/super-dev.sh"
  },
  "workspaces": [
    "apps/web"
  ],
  "devDependencies": {
    "concurrently": "^8.2.2",
    "nodemon": "^3.0.2",
    "chokidar-cli": "^3.0.0"
  }
}
